/* Post - Plurk CSS
   -----------------

   Plurks on the river. Positions are explicitly set and various states are
   specified as classes on `div.plurk`. Each plurk is placed inside
   `#timeline_cnt div.block_cnt`.
   Note that plurks are spreaded to different blocks, just like timestamps.

   Structure:

    div#p*.plurk[data-pid][data-rid][data-uid][data-type="plurk"][data-respcount]
      table > tbody
        tr
          td.td_img
            div.p_img
              img
          td
            div#plurk_cnt_*.plurk_cnt.metro_c*
              table > tbody
                tr
                  td.td_qual
                    span > (a.name span.qual)
                  td.cnt
                    div.text_holder
                    div.manager > (a.pif-* * 3)
                tr.tr_info (not used)
          td.td_response_count
            a[href="/p/*"][target="_blank"] (span.response_count)

*/

// Timeline -- Avatars
.p_img {
  @include material-shadow-polymer-8dp;
  border-bottom: 0;
  border-radius: 2px;
  overflow: hidden;
  transform: translateX(-4px) translateY(4px);
  transition: border-radius 100ms $material-ease-std,
              transform     250ms $material-ease-std;

  .plurk.display.plurk_box & {
    @include material-shadow-polymer-4dp;
    transform: translateX(24px) translateY(1px);
    border-radius: 50%;
    z-index: 9999;
    position: relative;
  }
}

.plurk .plurk_icon {
  // small icons bound to a avatars 'like' or 'replurk'
  transition: transform 250ms $material-ease-std;
}

.plurk.display.plurk_box .plurk_icon {
  transform: translateY(12px);
}

// Timeline -- Qualifier
.qualifier, .m_qualifier {
  // this also affects the composing area
  border-radius: 2px;
  min-height: $qualifier-height-in-em;
  display: inline-block;
  min-width: 1.5em;
  text-align: center;
  line-height: $qualifier-height-in-em;
  border: none;
  box-shadow: 1px 1px 2px rgba(black, .25);
}

.qualifier.qual_embedded {
  // clean-up default styling, use only underline
  box-shadow: none;
  background: none !important;
  text-decoration: underline dotted;
  border-radius: 0px;
}


// Posts
.td_cnt {
  // reset its padding, originally 5px
  // TODO: a suitable padding-top is needed to match the baseline of the quantifier
  padding-right: 0;
}

.td_qual {
  // make it line up with qualifier
  line-height: $qualifier-height-in-em;
  // reset its padding, originally 5px
  padding-left: 4px;
}

div .text_holder {
  // 1.3 to be
  padding-top: ($qualifier-height-in-em - 1.3em) / 2;
  transition: color 250ms ease-out;
  color: #222;
}

#timeline_cnt .plurk {
  $animation-time: 350ms;

  .plurk_cnt {
    // initial state
    border: none;
    border-radius: 4px;
    padding: 4px 8px 4px 0;
    box-shadow: 0 3px 6px rgba(black, 0.16),
                0 3px 6px rgba(black, 0.23);
    background: rgba(251, 251, 255, .65);
    // tricky, wtf style transition to be as **natural** as possible
    transition: background    $animation-time        $material-ease-std,
                border-radius $animation-time        $material-ease-std,
                transform     $animation-time        $material-ease-out,
                padding      ($animation-time / 2) $material-ease-out;
  }

  &.display .plurk_cnt {
    // when content is expanded
    box-shadow: 0 10px 20px rgba(black, 0.19),
                0 6px 6px rgba(black, 0.23);
    background: rgba(251, 251, 255, .8);
  }

  &.display.link_extend .plurk_cnt {
    // when mouse hover
    background: rgba(251, 251, 255, .9);
  }

  &.display.plurk_box {
    z-index: 2000; // originally 1200

    .td_qual {
      // a little jumpy but acceptable
      padding-left: 28px;
    }
  }

  &.display.plurk_box .plurk_cnt {
    border-radius: 4px 4px 0 0;
    // lift up a little bit
    transform: translateY(-8px);
    padding-top: 8px;
    padding-bottom: 8px;
    box-shadow: 0 14px 28px rgba(black, 0.25),
                0 10px 10px rgba(black, 0.22);
    background: rgba(material-color('blue-grey', '50'), 1);

    .td_cnt {
      padding-bottom: 0;
    }
  }

  // muted
  &.muted {
    opacity: .8;
    transition: opacity 250ms ease-in;

    // back to normal state when expanding
    &.display {
      opacity: 1;
    }

    .plurk_cnt {
      // will be overriden upon expansion so don't worry here
      background-color: rgba(#ddd, 0.9);
    }
    .plurk_cnt .text_holder {
      // fade the text
      color: #888;
    }
  }
}

// Posts -- Controls
.manager {
  // reset
  padding: 0;

  // work as a separator with `text_holder`
  // margin-top: 4px; -- such a coincidence!
  // sightly increase the size
  font-size: 14px;
  line-height: (24px - 1px);  // see `& a`

  .plurk.display & {
    // when the control disappears, the position of the response box (which is under the plurk box)
    // is not recalculated, resulting a big ugly gap between them
    // maybe a bug of Plurk itself
    display: block;
  }

  a {
    // WTF the icons' asymmetric paddings
    padding-top: 0;
    padding-bottom: 1px;
    display: inline-block;
    min-width: 2em;
    text-align: center;
    border-radius: 4px;
  }

  .like span,
  .replurk span {
    @extend %use-decimal-fonts;
  }
}

// Posts -- Media
a.meta {
  // mostly media
  transition: background 100ms $material-ease-std;
}

.plurk a.pictureservices {
  padding: 0;
}

// Posts -- New message highlight
// because we override the color of the background
@include new-message-highlight(6, rgba(#FF9, .9));
@include new-message-highlight(5, rgba(#FFA, .9));
@include new-message-highlight(4, rgba(#FFB, .9));
@include new-message-highlight(3, rgba(#FFC, .9));
@include new-message-highlight(2, rgba(#FFD, .9));
@include new-message-highlight(1, rgba(#FFE, .9));
